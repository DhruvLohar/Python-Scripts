Algorithm:                    Time Complexity:       Recurrence Relation:

Bellman-Ford Algorithm        O(V*E)                 T(V, E) = O(1) + V * (T(V-1, E) + O(E))
Floyd-Warshall Algorithm      O(V^3)                 T(V) = O(1) + V^2 * O(1)
Naive String Matching         O((n-m+1)*m)           T(n, m) = O(1) + T(n-1, m) 
Rabin-Karp Algorithm          O((n-m+1)*m)           T(n, m) = O(1) + T(n-1, m)
Insertion Sort                O(n^2)                 T(n) = T(n-1) + O(n)
Merge Sort                    O(n log n)             T(n) = 2T(n/2) + O(n)
Dijkstra's Algorithm          O((V+E) log V)         T(V, E) = O(1) + V * (T(V-1, E) + O(E))
Kunth-Morris-Pratt Algorithm  O(n + m)               T(n, m) = O(1) + T(n-1, m) + O(m)
Fractional Knapsack           O(n log n)             T(n) = O(1) + n * O(log n)
Quick Sort                    O(n^2) average case    T(n) = T(k) + T(n-k-1) + O(n)
Sum of Subset Algorithm       O(2^n)                 T(n) = 2 * T(n-1)
